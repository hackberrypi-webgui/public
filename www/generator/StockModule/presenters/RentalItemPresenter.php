<?php
namespace App\StockModule\Presenters;

use App\Forms\RentalItemFormFactory;
use App\Service\RentalItemService;
use Nette;
use App\Model;


class RentalItemPresenter extends BasePresenter
{

    /** @persistent */
    public $lock = 0;

    /** @persistent */
    public $quickFlash = "";

    /** @var RentalItemService @inject */
    private $rentalItemService;

    /** @var RentalItemFormFactory @inject */
    public $rentalItemFormFactory;

    public function __construct(RentalItemService $rentalItemService)
    {
        $this->rentalItemService = $rentalItemService;

    }

    public function actionDefault()
    {
        parent::actionDefault(); // TODO: Change the autogenerated stub
    }

    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    public function renderDefault()
	{
		$this->template->list = $this->rentalItemService->getList();
	}

    protected function createComponentRentalItemForm()
    {
        return $this->rentalItemFormFactory->create(function () {});
    }

    public function handleEditRentalItem($id = null){
        $this->template->editRentalItem = true;
        $this->template->idRentalItem = $id;

        if (($id != null)){

            $rentalItem = $this->rentalItemService->getBy($id);
            $rentalItemModel = new Model\RentalItemModel($rentalItem);

            $this['rentalItemForm']->setDefaults($rentalItem);

        }
        if ($this->isAjax()) {
            $this->redrawControl('editRentalItem');
        }else{
            $this->redirect(":Admin:RentalItem:default");
        }
    }

    public function handleDeleteRentalItem($id){
        $rentalItemModel = new Model\RentalItemModel($this->rentalItemService->getBy($id));
        $this->rentalItemService->delete($rentalItemModel);
        if ($this->isAjax()) {
            $this->redrawControl('obsah');
        }else{
            $this->redirect(":Admin:RentalItem:default");
        }
    }

}
