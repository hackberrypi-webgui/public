<?php
namespace App\StockModule\Presenters;

use App\Forms\EventFormFactory;
use App\Service\EventService;
use Nette;
use App\Model;


class EventPresenter extends BasePresenter
{

    /** @persistent */
    public $lock = 0;

    /** @persistent */
    public $quickFlash = "";

    /** @var EventService @inject */
    private $eventService;

    /** @var EventFormFactory @inject */
    public $eventFormFactory;

    public function __construct(EventService $eventService)
    {
        $this->eventService = $eventService;

    }

    public function actionDefault()
    {
        parent::actionDefault(); // TODO: Change the autogenerated stub
    }

    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    public function renderDefault()
	{
		$this->template->list = $this->eventService->getList();
	}

    protected function createComponentEventForm()
    {
        return $this->eventFormFactory->create(function () {});
    }

    public function handleEditEvent($id = null){
        $this->template->editEvent = true;
        $this->template->idEvent = $id;

        if (($id != null)){

            $event = $this->eventService->getBy($id);
            $eventModel = new Model\EventModel($event);

            $this['eventForm']->setDefaults($event);

        }
        if ($this->isAjax()) {
            $this->redrawControl('editEvent');
        }else{
            $this->redirect(":Admin:Event:default");
        }
    }

    public function handleDeleteEvent($id){
        $eventModel = new Model\EventModel($this->eventService->getBy($id));
        $this->eventService->delete($eventModel);
        if ($this->isAjax()) {
            $this->redrawControl('obsah');
        }else{
            $this->redirect(":Admin:Event:default");
        }
    }

}
