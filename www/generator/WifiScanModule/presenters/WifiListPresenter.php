<?php
namespace App\WifiScanModule\Presenters;

use App\Forms\WifiListFormFactory;
use App\Service\WifiListService;
use Nette;
use App\Model;


class WifiListPresenter extends BasePresenter
{

    /** @persistent */
    public $lock = 0;

    /** @persistent */
    public $quickFlash = "";

    /** @var WifiListService @inject */
    private $wifiListService;

    /** @var WifiListFormFactory @inject */
    public $wifiListFormFactory;

    public function __construct(WifiListService $wifiListService)
    {
        $this->wifiListService = $wifiListService;

    }

    public function actionDefault()
    {
        parent::actionDefault(); // TODO: Change the autogenerated stub
    }

    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    public function renderDefault()
	{
		$this->template->list = $this->wifiListService->getList();
	}

    protected function createComponentWifiListForm()
    {
        return $this->wifiListFormFactory->create(function () {});
    }

    public function handleEditWifiList($id = null){
        $this->template->editWifiList = true;
        $this->template->idWifiList = $id;

        if (($id != null)){

            $wifiList = $this->wifiListService->getBy($id);
            $wifiListModel = new Model\WifiListModel($wifiList);

            $this['wifiListForm']->setDefaults($wifiList);

        }
        if ($this->isAjax()) {
            $this->redrawControl('editWifiList');
        }else{
            $this->redirect(":Admin:WifiList:default");
        }
    }

    public function handleDeleteWifiList($id){
        $wifiListModel = new Model\WifiListModel($this->wifiListService->getBy($id));
        $this->wifiListService->delete($wifiListModel);
        if ($this->isAjax()) {
            $this->redrawControl('obsah');
        }else{
            $this->redirect(":Admin:WifiList:default");
        }
    }

}
