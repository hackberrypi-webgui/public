<?php
namespace App\ProjectModule\Presenters;

use App\Forms\ParticipantFormFactory;
use App\Service\ParticipantService;
use Nette;
use App\Model;


class ParticipantPresenter extends BasePresenter
{

    /** @persistent */
    public $lock = 0;

    /** @persistent */
    public $quickFlash = "";

    /** @var ParticipantService @inject */
    private $participantService;

    /** @var ParticipantFormFactory @inject */
    public $participantFormFactory;

    public function __construct(ParticipantService $participantService)
    {
        $this->participantService = $participantService;

    }

    public function actionDefault()
    {
        parent::actionDefault(); // TODO: Change the autogenerated stub
    }

    public function startup()
    {
        parent::startup(); // TODO: Change the autogenerated stub
    }

    public function renderDefault()
	{
		$this->template->list = $this->participantService->getList();
	}

    protected function createComponentParticipantForm()
    {
        return $this->participantFormFactory->create(function () {});
    }

    public function handleEditParticipant($id = null){
        $this->template->editParticipant = true;
        $this->template->idParticipant = $id;

        if (($id != null)){

            $participant = $this->participantService->getBy($id);
            $participantModel = new Model\ParticipantModel($participant);

            $this['participantForm']->setDefaults($participant);

        }
        if ($this->isAjax()) {
            $this->redrawControl('editParticipant');
        }else{
            $this->redirect(":Admin:Participant:default");
        }
    }

    public function handleDeleteParticipant($id){
        $participantModel = new Model\ParticipantModel($this->participantService->getBy($id));
        $this->participantService->delete($participantModel);
        if ($this->isAjax()) {
            $this->redrawControl('obsah');
        }else{
            $this->redirect(":Admin:Participant:default");
        }
    }

}
